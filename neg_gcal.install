<?php

/**
 * @file
 * Neg_gcal.install.
 */

use Drupal\neg_gcal\CalendarSettings;

/**
 * Implements hook_schema().
 */
function neg_gcal_schema() {
  $schema['google_calendar_events'] = [
    'description' => 'Base table for storing cached google calendar events',
    'fields' => [
      'calendar_id' => [
        'description' => 'Calendar ID',
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
      ],
      'id' => [
        'description' => 'Event ID',
        'type' => 'varchar',
        'length' => 200,
        'not null' => TRUE,
      ],
      'sequence' => [
        'description' => 'Event Sequence ID',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'default' => 0,
      ],
      'start' => [
        'description' => 'Event Start',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ],
      'end' => [
        'description' => 'Event End',
        'mysql_type' => 'datetime',
        'not null' => TRUE,
      ],
      'allDay' => [
        'description' => 'Is All Day Boolean',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ],
      'data' => [
        'description' => 'Serialized Event',
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
      ],
      'title' => [
        'description' => 'Name of the Event',
        'type' => 'varchar',
        'length' => '200',
        'not null' => TRUE,
      ],
      'ical_id' => [
        'description' => 'iCalUID',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ],
    ],
    'indexes' => [
      'calendar_idx' => ['calendar_id'],
      'id_idx' => ['id'],
      'start_idx' => ['start'],
      'end_idx' => ['end'],
      'all_day_idx' => ['allDay'],
      'title_idx' => ['title'],
    ],
  ];
  return $schema;
}

/**
 * Switches to using drupal state instead of config.
 */
function neg_gcal_update_8701(&$sandbox) {
  $config = \Drupal::service('config.factory')->getEditable(CalendarSettings::CONFIGNAME);

  // Get last sync time.
  $last_sync = $config->get('last_sync');
  \Drupal::state()->set('neg_gcal.last_sync', $last_sync);
  $config->clear('last_sync');

  // Handle next sync tokens.
  $data = $config->get();
  foreach ($data as $key => $data) {
    if (substr($key, 0, 14) === 'nextSyncToken_') {
      \Drupal::state()->set('neg_gcal.' . $key, $data);
      $config->clear($key);
    }
  }

  // Save config.
  $config->save();

  return t('Switched to using Drupal State.');
}
